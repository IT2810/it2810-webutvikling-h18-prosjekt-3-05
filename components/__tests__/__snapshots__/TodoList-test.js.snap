// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render corrrectly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "borderBottomColor": "#bbb",
      "borderBottomWidth": 0.5,
      "flexDirection": "row",
      "width": 700,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    //TodoList items with (un)checked circles //Circle (show a different design depending on whether the Todo-item is completed or not)
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "borderRadius": 15,
              "borderWidth": 3,
              "height": 30,
              "marginRight": 20,
              "width": 30,
            },
            Object {
              "borderColor": "#2e78b7",
            },
          ]
        }
      />
    </View>
    /*If the pencil-icon is clicked,the isEditing is true, and the text-field turns into an input field.*/
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "fontSize": 18,
            "fontWeight": "500",
            "marginVertical": 20,
          },
          Object {
            "color": "#29323c",
          },
        ]
      }
    />
  </View>
  //Options for editing and deleting todoItems /*If the todoItem is being edited, a check-icon will appear for the user to click on when editing is finished. This triggeres the finishedEditing-function */
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Object {
            "alignSelf": "flex-end",
            "marginHorizontal": 10,
            "marginVertical": 10,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        />
      </View>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Object {
            "alignSelf": "flex-end",
            "marginHorizontal": 10,
            "marginVertical": 10,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        />
      </View>
    </View>
  </View>
</View>
`;
